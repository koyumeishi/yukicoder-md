name: gh-pages

# Controls when the action will run. 
on:
  workflow_dispatch:
    inputs:
      ghpages:
        description: "Build gh-pages Flag"
        required: true
        default: 'false'

jobs:
  build:
    if: github.event.inputs.ghpages == 'true'
    name: build and deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install rust latest nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
      
      - uses: actions/cache@v2
      with:
        path: |
        ~/.cargo/registry
        ~/.cargo/git
        target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install node.js
      uses: actions/setup-node@v2
      with:
        node-version: '15'
      
      - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
        ${{ runner.os }}-yarn-

      - uses: actions-rs/install@v0.1
      with:
        crate: wasm-pack
        version: latest

      - name: build wasm
      run: wasm-pack build --release
      working-directory: ./wasm

      - name: build static site
      run: |
        yarn install
        yarn build
      working-directory: ./web
      env:
        GITHUB_PAGES: true
     
      - name: add nojekyll
      run: touch ./web/out/.nojekyll 
      
      - name: deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./web/out

      