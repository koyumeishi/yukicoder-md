[package]
name = "yukicoder_md_wasm"
version = "0.1.0"
authors = ["koyumeishi <koyumeishi+github@gmail.com>"]
edition = "2018"
license = "CC0-1.0"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
path = "src/lib.rs"
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook", "wee_alloc"]

[dependencies]
cfg-if = "1.0.0"

[target.'cfg(target_arch = "wasm32")'.dependencies]
getrandom = { version = "0.2.2", features = ["js"] }
yukicoder_md_lib = {version = "0.1.0" , path = "../lib"}
wasm-bindgen = "0.2.63"
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
# 
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }
log = "0.4.14"
wasm-timer = "0.2.5"
console_log = "0.2.0"

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
